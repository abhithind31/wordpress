name: Deploy to Azure AKS

on:
  push:
    branches: [ main ]

env:
  DOCKERHUB_REPOSITORY: abhithind31/wordpress
  AKS_RESOURCE_GROUP: experimentation
  AKS_CLUSTER_NAME: Delhivery

jobs:
  build:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build, tag, and push image to Docker Hub
      env:
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $DOCKERHUB_REPOSITORY:$IMAGE_TAG .
        docker push $DOCKERHUB_REPOSITORY:$IMAGE_TAG

    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up AKS credentials
      run: az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

    - name: Scale Down Deployment to Prevent Multi-Attach Error
      run: |
        # Scale down the deployment to 0 replicas to release the volume
        kubectl scale deployment wordpress --replicas=0 -n wordpress
        # Wait for the pods to terminate
        kubectl wait --for=delete pod -l app=wordpress -n wordpress --timeout=120s || true

    - name: Update Deployment Image
      env:
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        # Update the image in the deployment
        kubectl set image deployment/wordpress wordpress=$DOCKERHUB_REPOSITORY:$IMAGE_TAG -n wordpress

    - name: Scale Up Deployment
      run: |
        # Scale up the deployment back to the desired number of replicas
        kubectl scale deployment wordpress --replicas=1 -n wordpress
